name: Update Changelog, Create Release, and Build Binary

on:
  push:
    branches:
      - main

jobs:
  generate-changelog:
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.extract-version.outputs.new_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Generate CHANGELOG.md
        id: extract-version
        run: |
          changeset_files=$(find ./.changeset -type f -name "*.json")
          if [[ -n "$changeset_files" ]]; then
            for file in $changeset_files; do
              echo "Processing $file"
              NEW_VERSION=$(go run main.go --update-changelog $file | tail -n 1)
              echo "::set-output name=new_version::v$NEW_VERSION"
              rm -f "$file"
            done
          else
            echo "No changeset JSON files found. Skipping generation."
            echo "::set-output name=new_version::"
          fi

      - name: Commit changes
        env:
          GH_ACTIONS_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          git config --global user.name "ðŸ¦‹ GitHub Actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GH_ACTIONS_TOKEN}@github.com/taua-almeida/changelog-forge.git
          git add CHANGELOG.md .changeset/*.json || true
          git commit -m "ðŸ¦‹ Update CHANGELOG.md and clean changeset [skip ci]" || echo "No changes to commit."
          git push

  build-and-release:
    runs-on: ubuntu-latest
    needs: generate-changelog
    if: needs.generate-changelog.outputs.new_version != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.4

      - name: Build Binaries
        run: |
          mkdir -p dist
          LDFLAGS="-X 'main.Version=${{ needs.generate-changelog.outputs.new_version }}'"
          GOOS=linux GOARCH=amd64 go build -ldflags="$LDFLAGS" -o dist/changelog-forge-linux-amd64 .
          GOOS=darwin GOARCH=amd64 go build -ldflags="$LDFLAGS" -o dist/changelog-forge-darwin-amd64 .
          GOOS=windows GOARCH=amd64 go build -ldflags="$LDFLAGS" -o dist/changelog-forge-windows-amd64.exe

      - name: Push New Tag
        run: |
          git tag ${{ needs.generate-changelog.outputs.new_version }}
          git push origin ${{ needs.generate-changelog.outputs.new_version }}

      - name: Refresh Go Proxy
        run: |
          curl https://proxy.golang.org/github.com/taua-almeida/changelog-forge/@v/${{ needs.generate-changelog.outputs.new_version }}.info
          
      - name: Create GitHub Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.generate-changelog.outputs.new_version }}
          release_name: ${{ needs.generate-changelog.outputs.new_version }}
          body: |
            See the [CHANGELOG](https://github.com/taua-almeida/changelog-forge/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist/changelog-forge-linux-amd64
          asset_name: changelog-forge-linux-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}

      - name: Upload macOS Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist/changelog-forge-darwin-amd64
          asset_name: changelog-forge-darwin-amd64
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./dist/changelog-forge-windows-amd64.exe
          asset_name: changelog-forge-windows-amd64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
